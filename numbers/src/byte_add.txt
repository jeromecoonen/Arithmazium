#INCLUDE para_head byte_names.html aaanumbers_toc.html byte_sub.html


<h1>Addition</h1>

<p>
Binary addition all boils down to
<em>one plus one is two</em>:
</p>

<pre><xbig-code>  1 + 1 = 10
</xbig-code></pre>

<p>
Think of the nerdy T-shirt:
</p>

<div class="message-box">
<em>There are 10 kinds of people in the world &ndash;
those who understand binary and those who don't.</em>
</div>

<p>
Once we master <code>1 + 1</code>,
binary arithmetic has a pretty simple addition table.
</p>

<pre><big-code>  +|  0   1
  -+-------
  0|  0   1
  1|  1  10
</code></pre>

<h2>Example</h2>
<p>
Here is an application of our addition table.
The <code>c</code>s indicate carries into
that bit position. It works just like elementary school arithmetic.
</p>

<pre><big-code>       cc
    01100100      100
  + 00001101     + 13
  ----------     ----
    01110001      113
</code></pre>

<p>
Remeber the mantra, "six plus seven is three, carry the one"?
In binary, we have, "one plus one is zero, carry the one".
</p>

<p>
We do a lot of carrying in binary addition.
It's tedious when computing by hand, but electronic
circuits handle it easily.
When the sum of two bytes leads to a carry out of the leftmost
bit, that bit is lost to the byte forever. Most
computer processors will
save it in a special <em>Carry bit</em>,
in case the code running wants to check for it.
</p>

#INCLUDE para_foot byte_names.html aaanumbers_toc.html byte_sub.html
