#INCLUDE para_head find_ulp_of_one_plus_2.html aaapara_toc.html find_ulp_of_one_minus_2.html

<h1>find_ulp_of_one_minus()</h1>

<p>
This function is the factor \(1 / B\) smaller cousin of
<a class="inline" href="find_ulp_of_one_plus.html">
  <code>find_ulp_of_one_plus</code></a>,
which you can refer to for more elaboration of the fine points.
</p>

<p>
We start with the value \(2 / 3\), which rounds in any
radix not a multiple of \(3\). It's bigger than one-half,
so it lies in the exponent range just below <code>1.0</code>
in any of radix 2, 8, 10, or 16.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_2_3_d-auto.svg">
  Value 2/3 on a number line
</object>


<p>
Following the earlier discussion, \(2 / 3\) has the
decimal value
\(0.6666\cdots\) and the binary value
\(0.101010\cdots _{2}\).
Analogous to the case of \(4 / 3\),
the value <code>TWO&nbsp;/&nbsp;THREE</code>
evaluates to \(2/3 + \epsilon\).
The rounding error \(\epsilon\) is
\(+1 / 3, +4 / 3, +7 / 3, \ldots\)
or \(-2 / 3, -5 / 3, -8 / 3, \ldots\)
ulps of values just less than <code>1.0</code>.
</p>

<p>
We then isolate and triple \(\epsilon\) by computing
\[ | (1/6 + \epsilon) + ((1/6 + \epsilon) \times 2) - 1/2) | \]
which reduces to
\[ | (1/6 + \epsilon) + (-1/6 + 2\epsilon) | \]
all in exact arithmetic.
As in the cousin function,
it simplifies to \( | 3 \epsilon |\).
</p>

<p>
Here is a binary diagram showing the case of odd precision.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus-auto.svg">
  ------Image------
</object>

<p>
The value \(1 / 6\) is subtracted out, leaving a whole number
of ulps of values just less than <code>1.0</code>, regardless
of the radix.
</p>

#CODE 270-find_ulp_of_one_minus

<h2>Your turn</h2>

<p>
<span class="exer">Exercise:</span> Replay the binary case with even
precision to see that
it also proudces an ulp of <code>1.0</code>.
</p>

<p>
<span class="exer">Exercise:</span> The diagram below
starts the computation in 6-digit decimal arithmetic.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_c-auto.svg">
  ------Image------
</object>

<p>
Can you complete the computation of <code>x</code>?
</p>

<p>
<span class="exer">Exercise:</span> This diagram
illustrates the computation of <code>x</code>
in 6-digit octal arithmetic. We assume chopped arithmetic,
as found on Burroughs computers of the 1960s.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_d-auto.svg">
  ------Image------
</object>

<p>
Now rerun the computation in 7-digit octal.
</p>

#INCLUDE para_foot find_ulp_of_one_plus_2.html aaapara_toc.html find_ulp_of_one_minus_2.html
