#INCLUDE para_head find_ulp_of_one_plus.html aaapara_toc.html recalc_radix2.html

<h1>find_ulp_of_one_minus()</h1>

<p>
This function operates in parallel, but a factor of \(1 / B\) smaller
than its sibiling
<a class="inline" href="find_ulp_of_one_plus.html">
  <code>find_ulp_of_one_plus</code></a> just covered.
</p>

<p>
We start with the value \(2 / 3\), which rounds in any
radix not a multiple of \(3\).
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_2_3_d-auto.svg">
  Value 2/3 on a number line
</object>


<p>
It's rounding error is in
ulps of values just less than <code>1.0</code>.
Values <code>sixth</code> and <code>third</code> share
the rounding direction of <code>TWO / THREE</code>.
But the negative value <code>x</code> has the opposite
direction of magnitude rounding because of the change of sign.
</p>

<div class="math">
<p>
To explore the algebra a bit, if <code>sixth</code> has the value
\(1/6 + \epsilon\) then <code>x</code> has the value
\(-1/6 + 2 \epsilon\) or \(- ( 1/6 - 2 \epsilon )\).
That is, if <code>sixth</code> rounds up in magnitude then
<code>x</code> rounds down, and vice versa.
</p>
</div>

<p>
Here is a binary diagram showing the case of odd precision.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus-auto.svg">
  ------Image------
</object>

<p>
As before, we take
the larger choice of starting values for <code>x</code>.
</p>

#CODE 270-find_ulp_of_one_minus

<p>
Part 3
</p>

#CODE 272-find_ulp_of_one_minus2

<p>
Part 4
</p>

<p>
Part 5
</p>

#INCLUDE para_foot find_ulp_of_one_plus.html aaapara_toc.html recalc_radix2.html
