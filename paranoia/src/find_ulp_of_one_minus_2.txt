#INCLUDE para_head find_ulp_of_one_minus.html aaapara_toc.html recalc_radix2.html

<h1>find_ulp_of_one_minus()  (cont.)</h1>

<p>
The code continues im parallel with the case for ulps
just larger than <code>1.0</code>, but with a twist.
To investigate values immediately less than <code>1.0</code>,
we look at the expression
\[ 1 - (1 - \epsilon) \]
where \( \epsilon \) is a tiny value, not necessarily a whole
number of ulps of numbers less than one.
</p>

<p>
The wrinkle is that we
must take care not to lose a digit off the right hand
side by consuming a digit in the one's place.
</p>

<p>
The idiom for computing \( 1 - w \) when \( w < 1 \)is
to use two operations
\[ 1/2 + (1/2 - w) \]
avoiding use of the one's palce in any subexpression.
The formula above expands to
\[ 1/2 + (1/2  - (1/2 + (1/2 - \epsilon))) \]
which you will see in four lines of the code below.
</p>

<p>
In the loop, <code>y</code> is half a whole number of ulps plus
a small nudge. When subtracted from <code>ONE_HALF</code> the result
rounds to \(1/2 - \delta\), where Greek delta is a whole number of
ulps of values just less than <code>1.0</code>. 
</p>

<p>
The combined expression <code>ONE_HALF + (ONE_HALF - y)</code> is
exactly \(1 - \delta\).
We then apply the same tecchnique to compute
\[ 1 - (1 - \delta) \]
to isolate \( \delta \), iterating until it is down to
a single ulp.
</p>


<p>
This binary diagram starts with 3 ulps of values just less
than <code>1.0</code>. It illustrates the computation of
\( 1 - \delta \)
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_e-auto.svg">
  ------Image------
</object>

<p>
Next, we subtract from <code>1.0</code>in two steps to isolate
the difference.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_f-auto.svg">
  ------Image------
</object>

<p>
As in the parallel case, the loop terminates when the halved value
falls off to zero when rounded or when <code>u</code> is pinned.
</p>

#CODE 272-find_ulp_of_one_minus2

<h2>Your turn</h2>

<p>
<span class="exer">Exercise:</span> Complete the binary case
started in the diagram above, assuming rounded arithmetic,
to see that it results in
one ulp of <code>1.0</code>.
</p>

<p>
<span class="exer">Exercise:</span> The decimal diagram below
starts the iteration in 6-digit rounded decimal arithmetic.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_g-auto.svg">
  ------Image------
</object>

<p>
Continue the loop to find one ulp of <code>1.0</code>.
</p>

<p>
<span class="exer">Exercise:</span> Complete the computation
in 6-digit chopped octal arithmetic.
</p>

<object type="image/svg+xml" data="img/ulp_one_minus_h-auto.svg">
  ------Image------
</object>

#INCLUDE para_foot find_ulp_of_one_minus.html aaapara_toc.html recalc_radix2.html
