#INCLUDE para_head recalc_radix.html aaapara_toc.html find_ulp_of_one_minus.html

<h1>fin_ulp_of_one_plus()</h1>

<p>
Herein lies one of the splendid numerical idioms of Paranoia.
We'll encounter this technique in several functions to follow.
The idea is this:
</p>

<p class="quote">
<em>
When searching for the smallest value with a given property,
start with a <span class="bo">noisy</span> value
at least as big and iterate downward.
</em>
</p>

<p>
The code uses the value \(4 / 3\), which rounds in any
radix not a multiple of \(3\). It's rounding error is in
ulps of <code>1.0</code>. Subtracting from <code>HALF</code>
gives <code>sixth</code> a rounding error in the opposite direction.
If one is rounded up, the other is rounded down. Subtracting
the two approximations of \(1 / 3\) sums the two error magnitudes.
This binary diagram shows the case of even precision.
</p>

<object type="image/svg+xml" data="img/ulp_one_plus-auto.svg">
  ------Image------
</object>

<p>
The result of the fiddling is a handful of ulps of \(1\).
To give some headroom, Paranoia takes the larger of the the rounding
noise <code>x</code> and the <code>guess</code> passed as a parameter.
</p>

#CODE 265-find_ulp_of_one_plus

<p>
The next iteration exhibits another idiom: the creation of nonzero low-order
digits to encourage an upward round, if there's nearly a half-way case.
The binary diagram below shows how <code>u</code> is halved, but with
some nonzero low-order bits. Since <code>u</code> is some ulps of
\(1.0\), <code>u * u</code> is some ulps of <code>u</code>.
The factor <code>THIRTY_TWO</code> shifts those bits well back into
<code>u</code> in radix 2, 8, or 16. The diagram continues the binary tale.
</p>

<object type="image/svg+xml" data="img/ulp_one_plus_b-auto.svg">
  ------Image------
</object>

</p>
In decimal, the factor ensures some
nonzero low-order digits in <code>x</code>.
</p>

#CODE 267-find_ulp_of_one_plus2

<h2>Your turn</h2>
<p>
<span class="b">Exercise:</span> The decimal diagram below
starts the computation in decimal.
Assuming that <code>guess == 0.000001</code>, run the iteration
to see that the guess was correct.
</p>

<object type="image/svg+xml" data="img/ulp_one_plus_c-auto.svg">
  ------Image------
</object>

<p>
<span class="b">Exercise:</span> Replay the binary case with odd precision to see
it works either way.
</p>

#INCLUDE para_foot recalc_radix.html aaapara_toc.html find_ulp_of_one_minus.html
