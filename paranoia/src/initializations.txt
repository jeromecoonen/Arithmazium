#INCLUDE para_head open_comment.html aaapara_toc.html start_execution.html

<h1>Global variables and flags</h1>

<p>
A complex program like Paranoia in standard Basic suffers from a
lack of modularity, but moreso from the blizzard of
global variables with one- and
two-character names. <span class="p">ParaPas</span> and
<span class="p">ParaC</span> introduced more mnemonic names.
<span class="p">ParaPy</span> adopts Pythonic naming
conventions, and factors the code into
functions that isolate values used locally.
</p>

<p>
<code>NUM_TRIALS</code> is the one user-settable parameter in Paranoia.
It governs the number of random tests
that \(x \times y = y \times x\)
and the number of sequential tests of
\( \sqrt{x} \) for monotonicity and at integer \(x\).
Typical values of
<code>NUM_TRIALS</code> can be in the dozens, but the code
defends against absurdly large values. The name
is capitalized by Python convention for constants.
</p>

<p>
<span class="p">ParaPy</span> supports customary flags for more verbose
output and for nonstop execution. Classic <span class="p">ParaBas</span>
delivered its output screen by screen.
</p>

#CODE 100-initializations

<p>
The next globals are counters and status values
that appear throughout the program.
Paranoia classifies issues as Flaws, Defects, Serious Defects, and
Failures. It reports problems as they arise and
provides a summary at the end.
<span class="p">ParaBas</span> sets
milestones to track progress through the tests.
<span class="p">ParaPy</span> follows the same milestone sequence as
the classic. The code also preserves the original sense of
<em>page number</em>, which once corresponded
to <em>screens</em> as the units of
output.
</p>

<p>
There are global counters for errors associated
with \(y ^ {z}\) and error limits for
\( \sqrt{x}\). Two state values
apply to a simple
pseudorandom number generator.
Counters start at 0, but other values are given the
IEEE standard Not-a-Number value, <code>math.nan</code>.
</p>

#CODE 110-globals

<p>
Paranoia delivers qualitative results, too, such as whether
an operation has a guard digit, or what kind of rounding
it provides. The dictionary <code>flags{}</code> gathers up
those findings, which were captured in a fleet of global
variables in <span class="p">ParaBas</span>.
</p>

#CODE 115-flags

#INCLUDE para_foot open_comment.html aaapara_toc.html start_execution.html
